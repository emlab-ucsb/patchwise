% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints_targets.R
\name{constraints_targets}
\alias{constraints_targets}
\title{Create a dataframe for manual targets for all layers, including the features and the constraints}
\usage{
constraints_targets(feature_targets, patch_df)
}
\arguments{
\item{feature_targets}{a dataframe of feature targets generated by \code{features_targets()}}

\item{patch_df}{a dataframe generated by \code{create_patch_df()} that includes constraints for each patch and grid cell combination}
}
\value{
A dataframe to be used to specify all manual targets for prioritizr
}
\description{
This function creates a dataframe with the comibination of feature targets, generated by \code{features_targets()} and the targets for constraints to be used in prioritizr
}
\examples{
# Start with a little housekeeping to get the data from oceandatr
# Choose area of interest (Bermuda EEZ)
area <- oceandatr::get_area(area_name = "Bermuda")
projection <-'+proj=laea +lon_0=-64.8108333 +lat_0=32.3571917 +datum=WGS84 +units=m +no_defs'
# Create a planning grid
planning_raster <- oceandatr::get_planning_grid(area, projection = projection)
# Grab all relevant data
features_raster <- oceandatr::get_features(planning_grid = planning_raster)
# Separate seamount data - we want to protect entire patches
seamounts_raster <- features_raster[["seamounts"]]
features_raster <- features_raster[[names(features_raster)[names(features_raster) != "seamounts"]]]
# Create a "cost" to protecting a cell - just a uniform cost for this example
cost_raster <- setNames(planning_raster, "cost")
# Create patches from layer
patches_raster <- create_patches(seamounts_raster)
# Create patch dataframe
patches_raster_df <- create_patch_df(planning_grid = planning_raster, features = features_raster, patches = patches_raster, costs = cost_raster)
# Create boundary matrix for prioritizr
boundary_matrix <- create_boundary_matrix(planning_grid = planning_raster, patches = patches_raster, patch_df = patches_raster_df)
# Create target features - using just 20\% for every feature
features_targets <- features_targets(targets = rep(0.2, (terra::nlyr(features_raster)) + 1), features = features_raster, pre_patches = seamounts_raster)
# Create constraint targets
constraint_targets <- constraints_targets(feature_targets = features_targets, patch_df = patches_raster_df)
}
